.include "macro.inc"

/* assembler directives */
.set noat      /* allow manual use of $at */
.set noreorder /* don't insert nops after branches */
.set gp=64     /* allow use of 64-bit general purpose registers */

.section .text, "ax"

/* Generated by spimdisasm 1.11.5 */

# Handwritten function
glabel __osDisableInt
/* 475E0 8006C1E0 3C0A8009 */  lui       $t2, %hi(__OSGlobalIntMask)
/* 475E4 8006C1E4 254A1C50 */  addiu     $t2, $t2, %lo(__OSGlobalIntMask)
/* 475E8 8006C1E8 8D4B0000 */  lw        $t3, 0x0($t2)
/* 475EC 8006C1EC 316BFF00 */  andi      $t3, $t3, 0xFF00
/* 475F0 8006C1F0 40086000 */  mfc0      $t0, $12 # handwritten instruction
/* 475F4 8006C1F4 2401FFFE */  addiu     $at, $zero, -0x2
/* 475F8 8006C1F8 01014824 */  and       $t1, $t0, $at
/* 475FC 8006C1FC 40896000 */  mtc0      $t1, $12 # handwritten instruction
/* 47600 8006C200 31020001 */  andi      $v0, $t0, 0x1
/* 47604 8006C204 8D480000 */  lw        $t0, 0x0($t2)
/* 47608 8006C208 3108FF00 */  andi      $t0, $t0, 0xFF00
/* 4760C 8006C20C 110B000E */  beq       $t0, $t3, .LPAL_8006C248
/* 47610 8006C210 3C0A8009 */   lui      $t2, %hi(__osRunningThread)
/* 47614 8006C214 254A0A00 */  addiu     $t2, $t2, %lo(__osRunningThread)
/* 47618 8006C218 8D490118 */  lw        $t1, 0x118($t2)
/* 4761C 8006C21C 312AFF00 */  andi      $t2, $t1, 0xFF00
/* 47620 8006C220 01485024 */  and       $t2, $t2, $t0
/* 47624 8006C224 3C01FFFF */  lui       $at, (0xFFFF00FF >> 16)
/* 47628 8006C228 342100FF */  ori       $at, $at, (0xFFFF00FF & 0xFFFF)
/* 4762C 8006C22C 01214824 */  and       $t1, $t1, $at
/* 47630 8006C230 012A4825 */  or        $t1, $t1, $t2
/* 47634 8006C234 2401FFFE */  addiu     $at, $zero, -0x2
/* 47638 8006C238 01214824 */  and       $t1, $t1, $at
/* 4763C 8006C23C 40896000 */  mtc0      $t1, $12 # handwritten instruction
/* 47640 8006C240 00000000 */  nop
/* 47644 8006C244 00000000 */  nop
.LPAL_8006C248:
/* 47648 8006C248 03E00008 */  jr        $ra
/* 4764C 8006C24C 00000000 */   nop
